{"version":3,"sources":["finishTimer.mp3","type.mp3","App.js","index.js"],"names":["timeInterval","App","useState","hour","setHour","minute","setMinute","second","setSecond","st","setSt","useSound","finishTimer","volume","playOn","typeSec","typeSecond","timer","sec","Date","now","setInterval","secondLeft","Math","round","finish","prev","clearInterval","className","onClick","Swal","fire","title","icon","input","inputAttributes","min","max","step","inputValue","confirmButtonText","then","res","value","parseInt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAAe,MAA0B,wCCA1B,MAA0B,iC,OCOrCA,EAAe,KA4KJC,MA3Kf,WAAgB,IAAD,EACWC,mBAAS,GADpB,mBACNC,EADM,KACAC,EADA,OAEcF,mBAAS,GAFvB,mBAENG,EAFM,KAECC,EAFD,OAGeJ,mBAAS,GAHxB,mBAGNK,EAHM,KAGCC,EAHD,OAION,oBAAS,GAJhB,mBAINO,EAJM,KAIFC,EAJE,OAMIC,YAASC,EAAY,CAAEC,OAAQ,MAAzCC,EANM,sBAOQH,YAASI,EAAQ,CAAEF,OAAQ,MAAzCG,EAPM,oBAsFPC,EAAQ,WAEZ,IACEC,EADUC,KAAKC,MACM,IAATb,EACdP,EAAeqB,aAAY,WACzB,IAAIC,EAAaC,KAAKC,OAAON,EAAMC,KAAKC,OAAS,KAGjD,GAFGE,EAAW,GAAGd,EAAUc,GAEvBA,GAAc,EAEhB,GAAgB,IAAbA,GAED,GADAd,EAAU,GACM,IAAbc,GAAyB,IAATjB,GAAmB,IAAPF,EAE7B,YADAsB,SAIKH,EAAW,IAClBd,EAAU,IACVc,EAAW,GACXJ,EAAMC,KAAKC,MAAM,KACdf,EAAO,EACRC,GAAU,SAAAoB,GAAI,OAAEA,EAAK,KACdrB,GAAQ,GAEZF,EAAK,IACNG,EAAU,IACVF,GAAQ,SAAAsB,GAAI,OAAEA,EAAK,OAKxBJ,EAAW,IAAa,IAATjB,GAAmB,IAAPF,GAC5Ba,MAEF,MAIES,EAAS,WACbX,IACAa,cAAc3B,IAUhB,OACE,qBAAK4B,UAAU,OAAf,SAIE,sBAAKA,UAAU,QAAf,UAEE,sBAAKC,QAtIU,WACnBC,IAAKC,KAAK,CACRC,MAAM,cACNC,KAAK,WACLC,MAAM,QACNC,gBAAiB,CACfC,IAAK,EACLC,IAAK,GACLC,KAAM,GAERC,WAAWpC,EACXqC,kBAAkB,gBACjBC,MAAK,SAAAC,GACHA,EAAIC,OACLvC,EAAQwC,SAASF,EAAIC,YAwHrB,UACGxC,EAAK,GAAG,IAAIA,EAAKA,EAClB,0CAGF,sBAAK0B,QAxHY,WACrBC,IAAKC,KAAK,CACRC,MAAM,gBACNC,KAAK,WACLC,MAAM,QACNC,gBAAiB,CACfC,IAAK,EACLC,IAAK,GACLC,KAAM,GAERC,WAAWlC,EACXmC,kBAAkB,kBACjBC,MAAK,SAAAC,GACHA,EAAIC,OACLrC,EAAUsC,SAASF,EAAIC,YA0GvB,UACGtC,EAAO,GAAG,IAAIA,EAAOA,EACtB,0CAGF,sBAAKwB,QA1GY,WACrBC,IAAKC,KAAK,CACRC,MAAM,gBACNC,KAAK,WACLC,MAAM,QACNC,gBAAiB,CACfC,IAAK,EACLC,IAAK,GACLC,KAAM,GAERC,WAAWhC,EACXiC,kBAAkB,kBACjBC,MAAK,SAAAC,GACHA,EAAIC,OACLnC,EAAUoC,SAASF,EAAIC,YA4FvB,UACGpC,EAAO,GAAG,IAAIA,EAAOA,EACtB,0CAGF,yBAAQqB,UAAU,OAAlB,UACE,wBAAQA,UAAWnB,EAAG,QAAQ,QAASoB,QA7FjC,WACZ,GAAIpB,EAWFK,IACAJ,GAAM,GACNiB,cAAc3B,OAbT,CAGL,GAAY,IAATK,GAAqB,IAATE,GAAmB,IAAPJ,EAEzB,YADA2B,IAAKC,KAAK,eAAe,GAAG,SAG9BjB,IACAJ,GAAM,GACNO,MAmFI,SAAwDR,EAAG,QAAQ,UACnE,wBAAQmB,UAAU,QAAQC,QAhCpB,WACZnB,GAAM,GACNM,IACAW,cAAc3B,GACdI,EAAQ,GACRE,EAAU,GACVE,EAAU,IA0BJ,4BCpKVqC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a6bbbfa5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/finishTimer.2f4bcb8f.mp3\";","export default __webpack_public_path__ + \"static/media/type.2cac38c5.mp3\";","import {useState} from 'react';\nimport Swal from 'sweetalert2';\nimport './App.css';\nimport useSound from 'use-sound';\nimport finishTimer from './finishTimer.mp3'\nimport typeSec from './type.mp3';\n\nlet timeInterval = null;\nfunction App() {\n  const [hour, setHour] = useState(0);\n  const [minute,setMinute] = useState(0);\n  const [second,setSecond ] = useState(5);\n  const [st, setSt] = useState(false);\n\n  const [playOn] = useSound(finishTimer,{ volume: 0.25 });\n  const [typeSecond] = useSound(typeSec,{ volume: 0.25 });\n\n\n  const hourFunction = () =>{\n    Swal.fire({\n      title:\"CHOOSE HOUR\",\n      icon:\"question\",\n      input:\"range\",\n      inputAttributes: {\n        min: 0,\n        max: 23,\n        step: 1\n      },\n      inputValue:hour,\n      confirmButtonText:\"Update Hour\"\n    }).then(res=>{\n      if(res.value){\n        setHour(parseInt(res.value));\n      }\n    })\n  }\n\n  const minuteFunction = () =>{\n    Swal.fire({\n      title:\"CHOOSE MINUTE\",\n      icon:\"question\",\n      input:\"range\",\n      inputAttributes: {\n        min: 0,\n        max: 59,\n        step: 1\n      },\n      inputValue:minute,\n      confirmButtonText:\"Update Minute\"\n    }).then(res=>{\n      if(res.value){\n        setMinute(parseInt(res.value));\n      }\n    })\n  }\n\n  const secondFunction = () =>{\n    Swal.fire({\n      title:\"CHOOSE SECOND\",\n      icon:\"question\",\n      input:\"range\",\n      inputAttributes: {\n        min: 0,\n        max: 59,\n        step: 1\n      },\n      inputValue:second,\n      confirmButtonText:\"Update Second\"\n    }).then(res=>{\n      if(res.value){\n        setSecond(parseInt(res.value));\n      }\n    })\n  }\n\n  const start = () =>{\n    if(!st){\n\n      //check if there is no time set\n      if(minute===0&&second===0&&hour===0){\n        Swal.fire('ZERO SECONDS','','error');\n        return;\n      }\n      playOn();\n      setSt(true);\n      timer();\n    }else {\n      playOn();\n      setSt(false);\n      clearInterval(timeInterval);\n    }\n    \n  }\n\n  const timer = () =>{\n\n    const now = Date.now();\n\t\tlet sec = now + second * 1000;\n    timeInterval = setInterval(()=>{\n      let secondLeft = Math.round((sec - Date.now()) / 1000)\n      if(secondLeft>0) setSecond(secondLeft)\t\t\t\n     \n      if (secondLeft <= 0) {\n        \n        if(secondLeft===0){\n          setSecond(0); \n          if(secondLeft===0&&minute===0&&hour===0){\n            finish();\n            return;\n          }\n          \n        }else if(secondLeft<0){\n          setSecond(59);\n          secondLeft=59;\n          sec = Date.now()+59000;\n          if(minute>0){\n            setMinute(prev=>prev-1);\n          }else if(minute<=0){\n\n            if(hour>0){\n              setMinute(59);\n              setHour(prev=>prev-1);\n            }\n          }\n        }\n\t\t\t}\n      if(secondLeft<10&&minute===0&&hour===0){\n        typeSecond();\n      }\n    },1000)\n\n  }\n\n  const finish = () =>{\n    playOn();\n    clearInterval(timeInterval);\n  }\n  const reset = () =>{\n    setSt(false);\n    typeSecond();\n    clearInterval(timeInterval);\n    setHour(0);\n    setMinute(5);\n    setSecond(4);\n  }\n  return (\n    <div className=\"Main\">\n\n      \n      \n      <div className=\"timer\">\n        \n        <div onClick={hourFunction}>\n          {hour<10?\"0\"+hour:hour}\n          <span>hrs</span>\n        </div>\n        \n        <div onClick={minuteFunction}>\n          {minute<10?\"0\"+minute:minute}\n          <span>min</span>\n        </div>\n        \n        <div onClick={secondFunction}>\n          {second<10?\"0\"+second:second}\n          <span>sec</span>\n        </div>\n        \n        <header className=\"init\">\n          <button className={st?\"pause\":\"start\"} onClick={start}>{st?\"PAUSE\":\"START\"}</button>\n          <button className=\"reset\" onClick={reset}>RESET</button>\n        </header>\n        \n      \n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}